version: '3.1'
volumes:
  dbdata:
networks:
  app-network:
    driver: bridge
services:
  # The Application
  app:
    container_name: app
    build:
      context: ./
      dockerfile: app.dockerfile
    working_dir: /var/www
    volumes:
      - ./:/var/www
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=db"
    networks:
      - app-network
  # The Web Server
  web:
    container_name: web
    build:
      context: ./
      dockerfile: web.dockerfile
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - 80:80
    networks:
      - app-network
  # The Database
  db:
    container_name: db
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - dbdata:/var/lib/mysql
    environment:
      MYSQL_DATABASE: dndgendb
      MYSQL_USER: dndgenuser
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    ports:
        - "3306:3306"
    networks:
      - app-network
  phpmyadmin:
    container_name: phpma
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '81:80'
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    networks:
      - app-network
  composer:
    restart: 'no'
    image: composer:latest
    working_dir: /var/www
    command: install
    volumes:
      - ./:/var/www
  node:
    restart: 'no'
    image: node:latest
    working_dir: /var/www
    command: npm install
    volumes:
      - ./:/var/www
  dev:
    container_name: dev
    working_dir: /var/www
    depends_on:
      - app
    build:
      context: ./
      dockerfile: dev.dockerfile
    volumes:
      - ./:/var/www
    networks:
      - app-network
  #workspace:
  #  build:
  #    context: ./
  #    dockerfile: workspace.dockerfile
  #  volumes: 
  #    - ./:/var/www
  #  networks:
  #    - app-network